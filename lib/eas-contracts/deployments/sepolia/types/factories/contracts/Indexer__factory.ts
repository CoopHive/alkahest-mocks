/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Indexer, IndexerInterface } from "../../contracts/Indexer";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEAS",
        name: "eas",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidAttestation",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEAS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOffset",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "uid",
        type: "bytes32",
      },
    ],
    name: "Indexed",
    type: "event",
  },
  {
    inputs: [],
    name: "getEAS",
    outputs: [
      {
        internalType: "contract IEAS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "schema",
        type: "bytes32",
      },
    ],
    name: "getReceivedAttestationUIDCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "schema",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "reverseOrder",
        type: "bool",
      },
    ],
    name: "getReceivedAttestationUIDs",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "schema",
        type: "bytes32",
      },
    ],
    name: "getSchemaAttestationUIDCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "schema",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "reverseOrder",
        type: "bool",
      },
    ],
    name: "getSchemaAttestationUIDs",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "schema",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "attester",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "getSchemaAttesterRecipientAttestationUIDCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "schema",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "attester",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "reverseOrder",
        type: "bool",
      },
    ],
    name: "getSchemaAttesterRecipientAttestationUIDs",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "attester",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "schema",
        type: "bytes32",
      },
    ],
    name: "getSentAttestationUIDCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "attester",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "schema",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "reverseOrder",
        type: "bool",
      },
    ],
    name: "getSentAttestationUIDs",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "attestationUID",
        type: "bytes32",
      },
    ],
    name: "indexAttestation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "attestationUIDs",
        type: "bytes32[]",
      },
    ],
    name: "indexAttestations",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "attestationUID",
        type: "bytes32",
      },
    ],
    name: "isAttestationIndexed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61010060405234801561001157600080fd5b506040516111b13803806111b183398101604081905261003091610077565b6001608052600260a052600060c0526001600160a01b038116610066576040516341bc07ff60e11b815260040160405180910390fd5b6001600160a01b031660e0526100a7565b60006020828403121561008957600080fd5b81516001600160a01b03811681146100a057600080fd5b9392505050565b60805160a05160c05160e0516110ca6100e7600039600081816101ea01526108330152600061034c01526000610323015260006102fa01526110ca6000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063715ecdf61161008c578063b616352a11610066578063b616352a1461026d578063bbbdc81814610282578063ea51994b14610295578063ec864cba146102e057600080fd5b8063715ecdf61461021457806389a82fbe14610227578063af288efe1461025a57600080fd5b806354fd4d50116100bd57806354fd4d501461019b57806363bbf81b146101b057806365c40b9c146101d057600080fd5b80632412e9cc146100e4578063288a0a7b146101385780632f45f90e1461017b575b600080fd5b6101256100f2366004610b38565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260208181526040808320938352929052205490565b6040519081526020015b60405180910390f35b610125610146366004610b38565b73ffffffffffffffffffffffffffffffffffffffff919091166000908152600160209081526040808320938352929052205490565b610125610189366004610b64565b60009081526003602052604090205490565b6101a36102f3565b60405161012f9190610ba1565b6101c36101be366004610c00565b610396565b60405161012f9190610c41565b60405173ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016815260200161012f565b6101c3610222366004610c85565b610410565b61024a610235366004610b64565b60009081526004602052604090205460ff1690565b604051901515815260200161012f565b6101c3610268366004610cec565b6104ad565b61028061027b366004610d42565b61053c565b005b610280610290366004610b64565b610577565b6101256102a3366004610db7565b600092835260026020908152604080852073ffffffffffffffffffffffffffffffffffffffff948516865282528085209290931684525290205490565b6101c36102ee366004610cec565b610583565b606061031e7f000000000000000000000000000000000000000000000000000000000000000061060a565b6103477f000000000000000000000000000000000000000000000000000000000000000061060a565b6103707f000000000000000000000000000000000000000000000000000000000000000061060a565b60405160200161038293929190610df9565b604051602081830303815290604052905090565b6060610405600360008781526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156103f857602002820191906000526020600020905b8154815260200190600101908083116103e4575b50505050508585856106c8565b90505b949350505050565b600086815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff808a168552908352818420908816845282529182902080548351818402810184019094528084526060936104a293909291908301828280156103f857602002820191906000526020600020908154815260200190600101908083116103e45750505050508585856106c8565b979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff8516600090815260208181526040808320878452825291829020805483518184028101840190945280845260609361053293909291908301828280156103f857602002820191906000526020600020908154815260200190600101908083116103e45750505050508585856106c8565b9695505050505050565b8060005b818110156105715761056984848381811061055d5761055d610e6f565b905060200201356107e7565b600101610540565b50505050565b610580816107e7565b50565b73ffffffffffffffffffffffffffffffffffffffff85166000908152600160209081526040808320878452825291829020805483518184028101840190945280845260609361053293909291908301828280156103f857602002820191906000526020600020908154815260200190600101908083116103e45750505050508585856106c8565b6060600061061783610a33565b600101905060008167ffffffffffffffff81111561063757610637610e9e565b6040519080825280601f01601f191660200182016040528015610661576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461066b57509392505050565b835160609060008190036106ec575050604080516000815260208101909152610408565b808510610725576040517f01da157200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8385810182101561073557508481035b60008167ffffffffffffffff81111561075057610750610e9e565b604051908082528060200260200182016040528015610779578160200160208202803683370190505b50905060005b828110156107db5788866107955781890161079e565b81890160010185035b815181106107ae576107ae610e6f565b60200260200101518282815181106107c8576107c8610e6f565b602090810291909101015260010161077f565b50979650505050505050565b60008181526004602052604090205460ff16156108015750565b6040517fa3112a64000000000000000000000000000000000000000000000000000000008152600481018290526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a3112a6490602401600060405180830381865afa15801561088f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108d59190810190610fc6565b805190915080610911576040517fbd8ba84d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60e082015160c0830151602080850151600087815260048352604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091558383526003855281832080548083018255908452858420018a905573ffffffffffffffffffffffffffffffffffffffff808716808552848752838520868652875283852080548085018255908652878620018c9055908816808552828752838520868652875283852080548085018255908652878620018c905585855260028752838520908552865282842090845285528183208054918201815583529382209093018890559151909185917f2178f435e9624d54115e1d50a7313c90518a363b292678118444c0a239f11cf99190a2505050505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610a7c577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310610aa8576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610ac657662386f26fc10000830492506010015b6305f5e1008310610ade576305f5e100830492506008015b6127108310610af257612710830492506004015b60648310610b04576064830492506002015b600a8310610b10576001015b92915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461058057600080fd5b60008060408385031215610b4b57600080fd5b8235610b5681610b16565b946020939093013593505050565b600060208284031215610b7657600080fd5b5035919050565b60005b83811015610b98578181015183820152602001610b80565b50506000910152565b6020815260008251806020840152610bc0816040850160208701610b7d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b801515811461058057600080fd5b60008060008060808587031215610c1657600080fd5b8435935060208501359250604085013591506060850135610c3681610bf2565b939692955090935050565b6020808252825182820181905260009190848201906040850190845b81811015610c7957835183529284019291840191600101610c5d565b50909695505050505050565b60008060008060008060c08789031215610c9e57600080fd5b863595506020870135610cb081610b16565b94506040870135610cc081610b16565b9350606087013592506080870135915060a0870135610cde81610bf2565b809150509295509295509295565b600080600080600060a08688031215610d0457600080fd5b8535610d0f81610b16565b94506020860135935060408601359250606086013591506080860135610d3481610bf2565b809150509295509295909350565b60008060208385031215610d5557600080fd5b823567ffffffffffffffff80821115610d6d57600080fd5b818501915085601f830112610d8157600080fd5b813581811115610d9057600080fd5b8660208260051b8501011115610da557600080fd5b60209290920196919550909350505050565b600080600060608486031215610dcc57600080fd5b833592506020840135610dde81610b16565b91506040840135610dee81610b16565b809150509250925092565b60008451610e0b818460208901610b7d565b80830190507f2e000000000000000000000000000000000000000000000000000000000000008082528551610e47816001850160208a01610b7d565b60019201918201528351610e62816002840160208801610b7d565b0160020195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715610ef157610ef1610e9e565b60405290565b805167ffffffffffffffff81168114610f0f57600080fd5b919050565b8051610f0f81610b16565b8051610f0f81610bf2565b600082601f830112610f3b57600080fd5b815167ffffffffffffffff80821115610f5657610f56610e9e565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715610f9c57610f9c610e9e565b81604052838152866020858801011115610fb557600080fd5b610532846020830160208901610b7d565b600060208284031215610fd857600080fd5b815167ffffffffffffffff80821115610ff057600080fd5b90830190610140828603121561100557600080fd5b61100d610ecd565b825181526020830151602082015261102760408401610ef7565b604082015261103860608401610ef7565b606082015261104960808401610ef7565b608082015260a083015160a082015261106460c08401610f14565b60c082015261107560e08401610f14565b60e0820152610100611088818501610f1f565b9082015261012083810151838111156110a057600080fd5b6110ac88828701610f2a565b91830191909152509594505050505056fea164736f6c6343000813000a";

type IndexerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IndexerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Indexer__factory extends ContractFactory {
  constructor(...args: IndexerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    eas: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(eas, overrides || {});
  }
  override deploy(
    eas: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(eas, overrides || {}) as Promise<
      Indexer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Indexer__factory {
    return super.connect(runner) as Indexer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IndexerInterface {
    return new Interface(_abi) as IndexerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Indexer {
    return new Contract(address, _abi, runner) as unknown as Indexer;
  }
}
