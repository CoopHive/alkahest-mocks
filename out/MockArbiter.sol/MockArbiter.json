{"abi":[{"type":"constructor","inputs":[{"name":"_shouldAccept","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"checkStatement","inputs":[{"name":"","type":"tuple","internalType":"struct Attestation","components":[{"name":"uid","type":"bytes32","internalType":"bytes32"},{"name":"schema","type":"bytes32","internalType":"bytes32"},{"name":"time","type":"uint64","internalType":"uint64"},{"name":"expirationTime","type":"uint64","internalType":"uint64"},{"name":"revocationTime","type":"uint64","internalType":"uint64"},{"name":"refUID","type":"bytes32","internalType":"bytes32"},{"name":"recipient","type":"address","internalType":"address"},{"name":"attester","type":"address","internalType":"address"},{"name":"revocable","type":"bool","internalType":"bool"},{"name":"data","type":"bytes","internalType":"bytes"}]},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"setShouldAccept","inputs":[{"name":"_shouldAccept","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x608034606057601f6102e838819003918201601f19168301916001600160401b038311848410176064578084926020946040528339810103126060575180151580910360605760ff80195f54169116175f5560405161026f90816100798239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f3560e01c80631272ff8b1461006157636413b8531461002f575f80fd5b3461005d57602036600319011261005d5760043580151580910361005d5760ff80195f54169116175f555f80f35b5f80fd5b3461005d57606036600319011261005d5760043567ffffffffffffffff811161005d57610140600319823603011261005d5760405190610140820182811067ffffffffffffffff8211176101945760405280600401358252602481013560208301526100cf604482016101a8565b60408301526100e0606482016101a8565b60608301526100f1608482016101a8565b608083015260a481013560a083015261010c60c482016101bd565b60c083015261011d60e482016101bd565b60e0830152610104810135801515810361005d5761010083015261012481013567ffffffffffffffff811161005d5761012091600461015f92369201016101d1565b91015260243567ffffffffffffffff811161005d576101829036906004016101d1565b50602060ff5f54166040519015158152f35b634e487b7160e01b5f52604160045260245ffd5b359067ffffffffffffffff8216820361005d57565b35906001600160a01b038216820361005d57565b81601f8201121561005d5780359067ffffffffffffffff82116101945760405192601f8301601f19908116603f0116840167ffffffffffffffff811185821017610194576040528284526020838301011161005d57815f92602080930183860137830101529056fea2646970667358221220192993679cbe35c03caf45b6965ebba600086e5dad3a71769db358c09977e1cb64736f6c634300081b0033","sourceMap":"370:442:96:-:0;;;;;;;;;;;;;-1:-1:-1;;370:442:96;;;;-1:-1:-1;;;;;370:442:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;370:442:96;;;;;-1:-1:-1;370:442:96;;;;;;;;;;;-1:-1:-1;370:442:96;;;;;;-1:-1:-1;370:442:96;;;;;-1:-1:-1;370:442:96","linkReferences":{}},"deployedBytecode":{"object":"0x60806040526004361015610011575f80fd5b5f3560e01c80631272ff8b1461006157636413b8531461002f575f80fd5b3461005d57602036600319011261005d5760043580151580910361005d5760ff80195f54169116175f555f80f35b5f80fd5b3461005d57606036600319011261005d5760043567ffffffffffffffff811161005d57610140600319823603011261005d5760405190610140820182811067ffffffffffffffff8211176101945760405280600401358252602481013560208301526100cf604482016101a8565b60408301526100e0606482016101a8565b60608301526100f1608482016101a8565b608083015260a481013560a083015261010c60c482016101bd565b60c083015261011d60e482016101bd565b60e0830152610104810135801515810361005d5761010083015261012481013567ffffffffffffffff811161005d5761012091600461015f92369201016101d1565b91015260243567ffffffffffffffff811161005d576101829036906004016101d1565b50602060ff5f54166040519015158152f35b634e487b7160e01b5f52604160045260245ffd5b359067ffffffffffffffff8216820361005d57565b35906001600160a01b038216820361005d57565b81601f8201121561005d5780359067ffffffffffffffff82116101945760405192601f8301601f19908116603f0116840167ffffffffffffffff811185821017610194576040528284526020838301011161005d57815f92602080930183860137830101529056fea2646970667358221220192993679cbe35c03caf45b6965ebba600086e5dad3a71769db358c09977e1cb64736f6c634300081b0033","sourceMap":"370:442:96:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;370:442:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;370:442:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;370:442:96;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;370:442:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;370:442:96;;;;;;;;;;;;;;:::o","linkReferences":{}},"methodIdentifiers":{"checkStatement((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes),bytes,bytes32)":"1272ff8b","setShouldAccept(bool)":"6413b853"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_shouldAccept\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"checkStatement\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_shouldAccept\",\"type\":\"bool\"}],\"name\":\"setShouldAccept\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A simple mock implementation of the IArbiter interface for testing Can be configured to either accept or reject all statement validations by setting the shouldAccept flag\",\"kind\":\"dev\",\"methods\":{},\"title\":\"MockArbiter\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/unit/obligations/MockArbiter.sol\":\"MockArbiter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eas/=lib/eas-contracts/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@src/=src/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":eas-contracts/=lib/eas-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"src/IArbiter.sol\":{\"keccak256\":\"0xda1b81af79fa1ebc5ac887338bc4b444b7a7e7c11c8ce9e7eb0904216b923820\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ab2339faefcdba72e5653acb106eea4d26c198d1d67e8b84ea16a62deed46e11\",\"dweb:/ipfs/QmaprRBps4833abdkieGfGoeSr31DTp9m6dVXGZjz2DsZj\"]},\"test/unit/obligations/MockArbiter.sol\":{\"keccak256\":\"0xe1bc42fe5ceefa36030dcf8d54ba8f00c703957c35d0df0e35d96df01cb7d821\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e55c5a3833c7250f578259d745e68ff578dd70f2d475ee483a1d9b5d781d9516\",\"dweb:/ipfs/QmXTKqZWSyc4JGyCsTsXPtaLMD8wFDDRL8rJC3mzkrvpvZ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bool","name":"_shouldAccept","type":"bool"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"struct Attestation","name":"","type":"tuple","components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"bytes32","name":"schema","type":"bytes32"},{"internalType":"uint64","name":"time","type":"uint64"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"uint64","name":"revocationTime","type":"uint64"},{"internalType":"bytes32","name":"refUID","type":"bytes32"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}]},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","name":"checkStatement","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bool","name":"_shouldAccept","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setShouldAccept"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@eas/=lib/eas-contracts/contracts/","@openzeppelin/=lib/openzeppelin-contracts/","@src/=src/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","eas-contracts/=lib/eas-contracts/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"test/unit/obligations/MockArbiter.sol":"MockArbiter"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/eas-contracts/contracts/Common.sol":{"keccak256":"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685","urls":["bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d","dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc"],"license":"MIT"},"src/IArbiter.sol":{"keccak256":"0xda1b81af79fa1ebc5ac887338bc4b444b7a7e7c11c8ce9e7eb0904216b923820","urls":["bzz-raw://ab2339faefcdba72e5653acb106eea4d26c198d1d67e8b84ea16a62deed46e11","dweb:/ipfs/QmaprRBps4833abdkieGfGoeSr31DTp9m6dVXGZjz2DsZj"],"license":"UNLICENSED"},"test/unit/obligations/MockArbiter.sol":{"keccak256":"0xe1bc42fe5ceefa36030dcf8d54ba8f00c703957c35d0df0e35d96df01cb7d821","urls":["bzz-raw://e55c5a3833c7250f578259d745e68ff578dd70f2d475ee483a1d9b5d781d9516","dweb:/ipfs/QmXTKqZWSyc4JGyCsTsXPtaLMD8wFDDRL8rJC3mzkrvpvZ"],"license":"UNLICENSED"}},"version":1},"id":96}